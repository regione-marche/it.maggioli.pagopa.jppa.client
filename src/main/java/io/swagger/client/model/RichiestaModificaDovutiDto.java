/*
 * API Gateway Pagamenti
 * Set API REST PagoPA
 *
 * OpenAPI spec version: 1.0
 * Contact: pagamenti.produzione@maggioli.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DovutoDto;
import java.io.IOException;

/**
 * RichiestaModificaDovutiDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-23T07:57:29.055Z")
public class RichiestaModificaDovutiDto {
  @SerializedName("codiceIPA")
  private String codiceIPA = null;

  @SerializedName("codiceServizio")
  private String codiceServizio = null;

  @SerializedName("dovutoDto")
  private DovutoDto dovutoDto = null;

  /**
   * Indica quale parte dell&#39;oggetto va modificato, e per ciascun caso verrà verificato che il campo che si intende modificare sia presente e valido, in caso contrario verrà ritornato un errore, l’operazione ALL esegue tutti i controlli delle precedenti operazioni
   */
  @JsonAdapter(OperazioneEnum.Adapter.class)
  public enum OperazioneEnum {
    ALL("ALL"),
    
    MODIFICA_ANNO_COMPETENZA("MODIFICA_ANNO_COMPETENZA"),
    
    MODIFICA_CAUSALE_DEBITO("MODIFICA_CAUSALE_DEBITO"),
    
    MODIFICA_CONTRIBUENTE_DEBITO("MODIFICA_CONTRIBUENTE_DEBITO"),
    
    MODIFICA_DETTAGLI_IMPORTO_DEBITO("MODIFICA_DETTAGLI_IMPORTO_DEBITO"),
    
    MODIFICA_IMPORTO_DEBITO("MODIFICA_IMPORTO_DEBITO"),
    
    MODIFICA_SCADENZA_DEBITO("MODIFICA_SCADENZA_DEBITO");

    private String value;

    OperazioneEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperazioneEnum fromValue(String text) {
      for (OperazioneEnum b : OperazioneEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OperazioneEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperazioneEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperazioneEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OperazioneEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("operazione")
  private OperazioneEnum operazione = null;

  public RichiestaModificaDovutiDto codiceIPA(String codiceIPA) {
    this.codiceIPA = codiceIPA;
    return this;
  }

   /**
   * Codice IPA identificativo dell’ente
   * @return codiceIPA
  **/
  @ApiModelProperty(example = "EntTest1", value = "Codice IPA identificativo dell’ente")
  public String getCodiceIPA() {
    return codiceIPA;
  }

  public void setCodiceIPA(String codiceIPA) {
    this.codiceIPA = codiceIPA;
  }

  public RichiestaModificaDovutiDto codiceServizio(String codiceServizio) {
    this.codiceServizio = codiceServizio;
    return this;
  }

   /**
   * Codice del servizio chiamante
   * @return codiceServizio
  **/
  @ApiModelProperty(example = "JTRIB", value = "Codice del servizio chiamante")
  public String getCodiceServizio() {
    return codiceServizio;
  }

  public void setCodiceServizio(String codiceServizio) {
    this.codiceServizio = codiceServizio;
  }

  public RichiestaModificaDovutiDto dovutoDto(DovutoDto dovutoDto) {
    this.dovutoDto = dovutoDto;
    return this;
  }

   /**
   * Get dovutoDto
   * @return dovutoDto
  **/
  @ApiModelProperty(value = "")
  public DovutoDto getDovutoDto() {
    return dovutoDto;
  }

  public void setDovutoDto(DovutoDto dovutoDto) {
    this.dovutoDto = dovutoDto;
  }

  public RichiestaModificaDovutiDto operazione(OperazioneEnum operazione) {
    this.operazione = operazione;
    return this;
  }

   /**
   * Indica quale parte dell&#39;oggetto va modificato, e per ciascun caso verrà verificato che il campo che si intende modificare sia presente e valido, in caso contrario verrà ritornato un errore, l’operazione ALL esegue tutti i controlli delle precedenti operazioni
   * @return operazione
  **/
  @ApiModelProperty(example = "MODIFICA_CAUSALE_DEBITO", value = "Indica quale parte dell'oggetto va modificato, e per ciascun caso verrà verificato che il campo che si intende modificare sia presente e valido, in caso contrario verrà ritornato un errore, l’operazione ALL esegue tutti i controlli delle precedenti operazioni")
  public OperazioneEnum getOperazione() {
    return operazione;
  }

  public void setOperazione(OperazioneEnum operazione) {
    this.operazione = operazione;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RichiestaModificaDovutiDto richiestaModificaDovutiDto = (RichiestaModificaDovutiDto) o;
    return Objects.equals(this.codiceIPA, richiestaModificaDovutiDto.codiceIPA) &&
        Objects.equals(this.codiceServizio, richiestaModificaDovutiDto.codiceServizio) &&
        Objects.equals(this.dovutoDto, richiestaModificaDovutiDto.dovutoDto) &&
        Objects.equals(this.operazione, richiestaModificaDovutiDto.operazione);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceIPA, codiceServizio, dovutoDto, operazione);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RichiestaModificaDovutiDto {\n");
    
    sb.append("    codiceIPA: ").append(toIndentedString(codiceIPA)).append("\n");
    sb.append("    codiceServizio: ").append(toIndentedString(codiceServizio)).append("\n");
    sb.append("    dovutoDto: ").append(toIndentedString(dovutoDto)).append("\n");
    sb.append("    operazione: ").append(toIndentedString(operazione)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

