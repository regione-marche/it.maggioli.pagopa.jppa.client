/*
 * API Gateway Pagamenti
 * Set API REST PagoPA
 *
 * OpenAPI spec version: 1.0
 * Contact: pagamenti.produzione@maggioli.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.RichiestaInfoAvvisoPagamentoPerIdPosDto;
import io.swagger.client.model.RichiestaListaTerminaliPOSDto;
import io.swagger.client.model.RichiestaPagaDebitoPOSDto;
import io.swagger.client.model.RispostaInfoAvvisoPagamentoPerIdPosDto;
import io.swagger.client.model.RispostaListaTerminaliPOSDto;
import io.swagger.client.model.RispostaPagaDebitiDto;
import io.swagger.client.model.StandardAPIErrorResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PosApi
 */
@Ignore
public class PosApiTest {

    private final PosApi api = new PosApi();

    
    /**
     * Servizio che restituisce il dettaglio del debito tramite chiave debito ridotta
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postInfoPerIdPosUsingPOSTTest() throws Exception {
        RichiestaInfoAvvisoPagamentoPerIdPosDto infoAvvisiPagamentoPerChiaveDebito = null;
        RispostaInfoAvvisoPagamentoPerIdPosDto response = api.postInfoPerIdPosUsingPOST(infoAvvisiPagamentoPerChiaveDebito);

        // TODO: test validations
    }
    
    /**
     * Si occupa di restituire l&#39;elenco dei terminali POS censiti per un dato ente. Attualmente sono gestiti solo il Pos “Nexi” e Pos di “Progetti e Soluzioni”. Sono gestite due tipi di chiamate differenti, una chiamata con filtro contesto e una chiamata senza filtri.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postInfoPerIdPosUsingPOST1Test() throws Exception {
        RichiestaListaTerminaliPOSDto richiesta = null;
        RispostaListaTerminaliPOSDto response = api.postInfoPerIdPosUsingPOST1(richiesta);

        // TODO: test validations
    }
    
    /**
     * Servizio che gestisce la richiesta di pagamento di un carrello di debiti e restituisce l&#39;identificativo della transazione che è stata creata ed un URL
     *
     * Il servizio creerà il/i debito/i, creerà una transazione e restituirà un identTransazione e un URL. Il client invocando tale URL concluderà la procedura di pagamento (modello 1) del carrello debiti prima sottomesso.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postPagaPosUsingPOSTTest() throws Exception {
        RichiestaPagaDebitoPOSDto richiestaPagaDebitiDto = null;
        RispostaPagaDebitiDto response = api.postPagaPosUsingPOST(richiestaPagaDebitiDto);

        // TODO: test validations
    }
    
}
